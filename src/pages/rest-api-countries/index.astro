---
import Layout from '@layouts/Layout.astro';
import CountryCard from '@components/rest-api-countries/CountryCard.astro';
import data from '@data/rest_countries.json';

// const data = await fetch('https://restcountries.com/v3.1/all').then(r => r.json());
---

<Layout title="REST Countries API with color theme switcher" description="Integration with the REST Countries API to pull country data and display it like in the designs.">
  <div class="page-content">
    <header>
      <div class="header-content">
        <h1>Where in the world?</h1>
        <button>Dark Mode</button>
      </div>
    </header>
    <div class="content">
      <div class="filter-section">
        <input type="text" placeholder="Search for a country..."/>
        <select name="filter-by-region">
          <option value="">Filter by Region</option>
          <option value="africa">Africa</option>
          <option value="america">America</option>
          <option value="asia">Asia</option>
          <option value="europe">Europe</option>
          <option value="oceania">Oceania</option>
        </select>
      </div>
      <main class="countries-display">
        {data.map((country) => (
        <CountryCard flagImg={country.flags.png} name={country.name} population={country.population} region={country.region} capital={country.capital}/>
        ))}
      </main>
    </div>
  </div>
</Layout>

<style>
:root {
  --dark-blue: hsl(209, 23%, 22%);
  --very-dark-blue: hsl(207, 26%, 17%);
  --very-dark-blue-text: hsl(200, 15%, 8%);
  --dark-gray: hsl(0, 0%, 52%);
  --very-light-gray: hsl(0, 0%, 98%);
  --white: hsl(0, 0%, 100%);
  --shadow: 0 0 5px rgba(0,0,0,0.1);
  --radius: 8px;
}

@font-face {
  font-family: 'Nunito Sans';
  src: url('/fonts/NunitoSans-Font.tff') format('tff');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

.page-content {
  width: 100%; 
  min-height: 100vh;
  font-family: 'Nunito Sans', sans-serif;
  background-color: hsl(0, 0%, 98%);
}

header {
  display: flex;
  justify-content: center;
  background-color: hsl(0, 0%, 100%);
  box-shadow: var(--shadow);
}

.header-content {
  min-width: 1440px;
  padding: 1.5rem;
  display: flex;
  justify-content: space-between;
}

.header-content h1 {
  font-size: 1.5rem;
}

.content {
  display: flex;
  flex-direction: column;
  align-items: center;
}

button, input, select, option {
  background-color: var(--white);
  border: none;
  padding: 0.5rem 2rem;
  outline: none;
}

button {
  cursor: pointer;
}

input {
  min-width: 500px;
  background-color: hsl(0, 0%, 100%);
  box-shadow: var(--shadow);
  border-radius: var(--radius);
}

.filter-section {
  padding: 1.5rem;
  min-height: 10vh;
  min-width: 1440px;
  display: flex;
  justify-content: space-between;
}

select:first-child {
  display: none;
}

select option {
  padding: 3rem 2rem;
}

.countries-display {
  padding: 1.5rem;
  width: 1440px;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  grid-gap: 4.5rem;
}

</style>

